{"remainingRequest":"/Users/liulei/Desktop/Vue/vue-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/liulei/Desktop/Vue/vue-frontend/src/views/login/index.vue?vue&type=style&index=0&id=37dfd6fc&scoped=true&lang=css&","dependencies":[{"path":"/Users/liulei/Desktop/Vue/vue-frontend/src/views/login/index.vue","mtime":1658470702312},{"path":"/Users/liulei/Desktop/Vue/vue-frontend/node_modules/css-loader/dist/cjs.js","mtime":1657875968436},{"path":"/Users/liulei/Desktop/Vue/vue-frontend/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1657875963442},{"path":"/Users/liulei/Desktop/Vue/vue-frontend/node_modules/postcss-loader/src/index.js","mtime":1657875967447},{"path":"/Users/liulei/Desktop/Vue/vue-frontend/node_modules/cache-loader/dist/cjs.js","mtime":1657875963855},{"path":"/Users/liulei/Desktop/Vue/vue-frontend/node_modules/vue-loader/lib/index.js","mtime":1657875961434}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci5sb2dpbi1mb3JtIHsKICB3aWR0aDogMzUwcHg7CiAgbWFyZ2luOiAxNjBweCwgYXV0bzsKICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuOCk7CiAgcGFkZGluZzogMzBweDsKICBib3JkZXItcmFkaXVzOiAyMHB4Owp9Ci5sb2dpbi1jb250YWluZXIgewogIHBvc2l0aW9uOiBhYnNvbHV0ZTsKICB3aWR0aDogMTAwJTsKICBoZWlnaHQ6IDEwMCU7CiAgYmFja2dyb3VuZDogdXJsKC4uLy4uL2Fzc2V0cy90dXBpYW4ud2VicCk7CiAgb3ZlcmZsb3c6IGhpZGRlbjsKICBkaXNwbGF5OiBmbGV4OwogIGp1c3RpZnktY29udGVudDogY2VudGVyOwogIGFsaWduLWl0ZW1zOiBjZW50ZXI7Cn0KLmxvZ2luLXRpdGxlIHsKICB0ZXh0LWFsaWduOiBjZW50ZXI7CiAgY29sb3I6ICMzMDMxMzM7Cn0K"},{"version":3,"sources":["index.vue"],"names":[],"mappings":";AAoGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/views/login","sourcesContent":["<template>\n  <div class=\"login-container\">\n    <el-form\n      :model=\"form\"\n      status-icon\n      :rules=\"rules\"\n      ref=\"form\"\n      label-width=\"80px\"\n      class=\"login-form\"\n    >\n      <h2 class=\"login-title\">登录</h2>\n      <el-form-item label=\"账号\" prop=\"username\">\n        <el-input placeholder=\"请输入账号\" v-model=\"form.username\"></el-input>\n      </el-form-item>\n      <el-form-item label=\"密码\" prop=\"password\">\n        <el-input\n          type=\"password\"\n          v-model=\"form.password\"\n          placeholder=\"请输入密码\"\n        ></el-input>\n      </el-form-item>\n      <el-form-item>\n        <el-button @click=\"onSubmit('form')\" type=\"primary\">登录</el-button>\n      </el-form-item>\n    </el-form>\n  </div>\n</template>\n\n<script>\n import {login} from '@/api/login.js'\n import memoryUtils from \"@/utils/memoryUtils\"\n import  storageUtils from '../../utils/storageUtils'\nexport default {\n  data() {\n    var validataUserName = (rule, value, callback) => {\n        value = value.trim();\n        const length = value && value.length;\n        const pwdReg = /^[a-zA-z0-9_]+$/;\n        if (value === \"\") {\n          callback(new Error(\"请输入账号\"));\n        } else if (length < 4 || length > 12) {\n          callback(new Error(\"长度在4-12个字符之间\"));\n        } else if (!pwdReg.test(value)){\n          callback(new Error(\"账号必须由英文、字母或下划线组成\"));\n        } else {\n          callback();\n        }\n      };\n    return {\n      form: {\n        username: \"\",\n        password: \"\",\n      },\n\n      rules: {\n        username: [\n          {\n            required: true,\n            validator: validataUserName,\n            trigger: [\"blur\", \"change\"],\n          },\n        ],\n        password: [\n          {\n            required: true,\n            message: \"请输入密码\",\n            trigger: [\"blur\", \"change\"],\n          },\n        ],\n      },\n    };\n  },\n  methods: {\n    onSubmit(formName) {\n      this.$refs[formName].validate(async(valid) => {\n        if (valid) {\n          let result =await login(this.form.username, this.form.password)\n          //console.log(this.form.username, this.form.password);\n          result= result.data;\n          if(result.status==0){\n            this.$message({\n              message:'登录成功',\n              type:'success'\n            });\n            const user = result.data\n            storageUtils.saveUser(user)\n            memoryUtils.user=user\n            this.$router.replace('/')\n          }\n        } else {\n          console.log(\"error submit!\");\n          return false;\n        }\n      });\n    },\n  },\n};\n</script>\n\n<style scoped>\n.login-form {\n  width: 350px;\n  margin: 160px, auto;\n  background-color: rgba(255, 255, 255, 0.8);\n  padding: 30px;\n  border-radius: 20px;\n}\n.login-container {\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  background: url(../../assets/tupian.webp);\n  overflow: hidden;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n.login-title {\n  text-align: center;\n  color: #303133;\n}\n</style>"]}]}