{"remainingRequest":"/Users/liulei/Desktop/Vue/vue-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/liulei/Desktop/Vue/vue-frontend/src/components/AppNavbar/index.vue?vue&type=style&index=0&id=40e822d4&scoped=true&lang=css&","dependencies":[{"path":"/Users/liulei/Desktop/Vue/vue-frontend/src/components/AppNavbar/index.vue","mtime":1658477960540},{"path":"/Users/liulei/Desktop/Vue/vue-frontend/node_modules/css-loader/dist/cjs.js","mtime":1657875968436},{"path":"/Users/liulei/Desktop/Vue/vue-frontend/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1657875963442},{"path":"/Users/liulei/Desktop/Vue/vue-frontend/node_modules/postcss-loader/src/index.js","mtime":1657875967447},{"path":"/Users/liulei/Desktop/Vue/vue-frontend/node_modules/cache-loader/dist/cjs.js","mtime":1657875963855},{"path":"/Users/liulei/Desktop/Vue/vue-frontend/node_modules/vue-loader/lib/index.js","mtime":1657875961434}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci5uYXZiYXIgewogIHBvc2l0aW9uOiBhYnNvbHV0ZTsKICB3aWR0aDogMjMwcHg7CiAgdG9wOiA1MHB4OwogIGxlZnQ6IDBweDsKICBib3R0b206IDBweDsKICBvdmVyZmxvdy15OiBhdXRvOwogIGJhY2tncm91bmQtY29sb3I6ICM1NDVjNjQ7Cn0K"},{"version":3,"sources":["index.vue"],"names":[],"mappings":";AAgFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/components/AppNavbar","sourcesContent":["<script>\nimport menuList from \"@/config/menuConfig.js\";\nimport memoryUtils from \"../../utils/memoryUtils\";\nexport default {\n  data() {\n    return {\n      menuNodes: \"\",\n    };\n  },\n  mounted() {\n    this.menuNodes = this.getMenuNodes(menuList);\n  },\n  components: {},\n  render() {\n    return (\n      <div class=\"navbar\">\n        <el-menu\n          router={true}\n          default-active={this.$route.path}\n          default-openeds={[\"/students\"]}\n          class=\"el-menu-vertical-demo\"\n          background-color=\"#545c64\"\n          text-color=\"#fff\"\n          active-text-color=\"#ffd04b\"\n        >\n          {this.menuNodes}\n        </el-menu>\n      </div>\n    );\n  },\n  methods: {\n    hasAuth(item) {\n      const { index, isPublic } = item;\n      const menus = memoryUtils.user.role.menus;\n      // console.log(memoryUtils);\n      // console.log(menus);\n      const username = memoryUtils.user.username;\n      //  如果当前用户admin  =》全部通过\n      //  如果当前item是公开的\n      //  当前用户有此item的权限  index是否在menus中\n      if (username == \"admin\" || isPublic || menus.indexOf(index) !== -1) {\n        return true;\n      } else if (item.children) {\n        //如果当前用户有此item的某个子item权限\n        //查看当前item的子节点中的index时候在用户权限列表中存在，find方法会返回对应的元素，但是需要的是布尔值所以两次取反强制转换\n        return !!item.children.find(\n          (child) => menus.indexOf(child.index) !== -1\n        );\n      }\n      return false;\n    },\n    getMenuNodes(menuList) {\n      return menuList.map((item) => {\n        if (this.hasAuth(item)) {\n          if (!item.children) {\n            return (\n              <el-menu-item index={item.index}>\n                <i class={item.icon}></i>\n                <span slot=\"title\">{item.title}</span>\n              </el-menu-item>\n            );\n          } else {\n            return (\n              <el-submenu index={item.index}>\n                <template slot=\"title\">\n                  <i class={item.icon}></i>\n                  <span>{item.title}</span>\n                </template>\n                {this.getMenuNodes(item.children)}\n              </el-submenu>\n            );\n          }\n        }\n      });\n    },\n  },\n};\n</script>\n\n<style scoped>\n.navbar {\n  position: absolute;\n  width: 230px;\n  top: 50px;\n  left: 0px;\n  bottom: 0px;\n  overflow-y: auto;\n  background-color: #545c64;\n}\n</style>"]}]}