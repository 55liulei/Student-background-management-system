{"remainingRequest":"/Users/liulei/Desktop/Vue/vue-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/liulei/Desktop/Vue/vue-frontend/src/views/role/Auth.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/liulei/Desktop/Vue/vue-frontend/src/views/role/Auth.vue","mtime":1658478192512},{"path":"/Users/liulei/Desktop/Vue/vue-frontend/node_modules/cache-loader/dist/cjs.js","mtime":1657875963855},{"path":"/Users/liulei/Desktop/Vue/vue-frontend/node_modules/babel-loader/lib/index.js","mtime":1657875486856},{"path":"/Users/liulei/Desktop/Vue/vue-frontend/node_modules/cache-loader/dist/cjs.js","mtime":1657875963855},{"path":"/Users/liulei/Desktop/Vue/vue-frontend/node_modules/vue-loader/lib/index.js","mtime":1657875961434}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmltcG9ydCBtZW51TGlzdCBmcm9tICJAL2NvbmZpZy9tZW51Q29uZmlnLmpzIjsKZXhwb3J0IGRlZmF1bHQgewogIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBydWxlczogewogICAgICAgIG5hbWU6IFsKICAgICAgICAgIHsKICAgICAgICAgICAgcmVxdWlyZWQ6IHRydWUsCiAgICAgICAgICAgIG1lc3NhZ2U6ICLor7fovpPlhaXop5LoibLlkI3np7AiLAogICAgICAgICAgICB0cmlnZ2VyOiBbImJsdXIiLCAiY2hhbmdlIl0sCiAgICAgICAgICB9LAogICAgICAgIF0sCiAgICAgIH0sCiAgICAgIHVwZGF0ZVJvbGU6IHt9LCAvL+imgeS/ruaUueWQjueahOinkuiJsuWvueixoQogICAgICBhdXRoTGlzdDogW10sIC8v5p2D6ZmQ5YiX6KGoCiAgICAgIGNoZWNrZWRLZXlzOiBbXSwgLy/moJHlvaLnqbrku7bpgInkuK3pobnmlbDnu4QKICAgIH07CiAgfSwKICBwcm9wczogWyJyb2xlIl0sCiAgbW91bnRlZCgpIHsKICAgIHRoaXMudXBkYXRlUm9sZSA9IHsgLi4udGhpcy5yb2xlIH07CiAgICB0aGlzLmF1dGhMaXN0ID0gdGhpcy5nZXRBdXRoTm9kZXMobWVudUxpc3QpOwogICAgdGhpcy5jaGVja2VkS2V5cyA9IHRoaXMucm9sZS5tZW51czsKICB9LAogIHdhdGNoOiB7CiAgICByb2xlKHZhbCkgewogICAgICBpZiAodmFsKSB7CiAgICAgICAgdGhpcy4kbmV4dFRpY2soKCkgPT4gewogICAgICAgICAgdGhpcy51cGRhdGVSb2xlID0geyAuLi52YWwgfTsKICAgICAgICAgIHRoaXMuY2hlY2tlZEtleXMgPSB2YWwubWVudXM7CiAgICAgICAgICB0aGlzLiRyZWZzWyJ0cmVlIl0uc2V0Q2hlY2tlZEtleXModGhpcy5jaGVja2VkS2V5cyk7CiAgICAgICAgfSk7CiAgICAgIH0KICAgIH0sCiAgfSwKICBjb21wb25lbnRzOiB7fSwKCiAgbWV0aG9kczogewogICAgZ2V0QXV0aE5vZGVzKG1lbnVMaXN0KSB7CiAgICAgIHJldHVybiBtZW51TGlzdC5tYXAoKGl0ZW0pID0+IHsKICAgICAgICBpZiAoIWl0ZW0uY2hpbGRyZW4pIHsKICAgICAgICAgIHJldHVybiB7CiAgICAgICAgICAgIGluZGV4OiBpdGVtLmluZGV4LAogICAgICAgICAgICBsYWJlbDogaXRlbS50aXRsZSwKICAgICAgICAgIH07CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIHJldHVybiB7CiAgICAgICAgICAgIGluZGV4OiBpdGVtLmluZGV4LAogICAgICAgICAgICBsYWJlbDogaXRlbS50aXRsZSwKICAgICAgICAgICAgY2hpbGRyZW46IHRoaXMuZ2V0QXV0aE5vZGVzKGl0ZW0uY2hpbGRyZW4pLAogICAgICAgICAgfTsKICAgICAgICB9CiAgICAgIH0pOwogICAgfSwKICAgIC8v5qCR5b2i56m66Ze06IqC54K5IOeCueWHu+WbnuiwgwogICAgLy8gZGF0YSDlvZPliY3ngrnlh7voioLngrnmlbDmja4gIGNoZWNrZWQgIOiKgueCueaYr+WQpuiiq+mAieS4rSAgaW5kZXRlcm1haW5hdGUg5b2T5YmN6IqC54K555qE5a2Q6IqC54K55piv5ZCm5pyJ6YCJ5Lit54q25oCBCiAgICBoYW5kbGVDaGVja0NoYW5nZShkYXRhLCBjaGVja2VkLCBpbmRldGVybWluYXRlKSB7CiAgICAgIGlmIChjaGVja2VkKSB7CiAgICAgICAgdGhpcy5jaGVja2VkS2V5cy5wdXNoKGRhdGEuaW5kZXgpOwogICAgICAgIGxldCBzZXQgPSBuZXcgU2V0KHRoaXMuY2hlY2tlZEtleXMpOwogICAgICAgIHRoaXMuY2hlY2tlZEtleXMgPSBBcnJheS5mcm9tKHNldCk7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgaWYgKHRoaXMuY2hlY2tlZEtleXMuaW5kZXhPZihkYXRhLmluZGV4KSAhPSAtMSkgewogICAgICAgICAgdGhpcy5jaGVja2VkS2V5cy5zcGxpY2UodGhpcy5jaGVja2VkS2V5cy5pbmRleE9mKGRhdGEuaW5kZXgpLCAxKTsKICAgICAgICB9CiAgICAgIH0KICAgIH0sCiAgICBnZXRNZW51cygpIHsKICAgICAgdGhpcy51cGRhdGVSb2xlLm1lbnVzID0gdGhpcy5jaGVja2VkS2V5czsKICAgICAgcmV0dXJuIHRoaXMudXBkYXRlUm9sZTsKICAgIH0sCiAgfSwKfTsK"},{"version":3,"sources":["Auth.vue"],"names":[],"mappings":";AA6BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Auth.vue","sourceRoot":"src/views/role","sourcesContent":["<template>\n  <div>\n    <el-form\n      status-icon\n      ref=\"roleForm\"\n      :model=\"updateRole\"\n      label-width=\"100px\"\n      label-position=\"right\"\n      style=\"width: 400px\"\n      :rules=\"rules\"\n    >\n      <el-form-item label=\"角色名称\" prop=\"name\">\n        <el-input v-model=\"updateRole.name\" placeholder=\"请输入角色名称\" />\n      </el-form-item>\n    </el-form>\n    <el-tree\n      :data=\"authList\"\n      show-checkbox\n      node-key=\"index\"\n      :default-expand-all=\"true\"\n      :default-checked-keys=\"checkedKeys\"\n      @check-change=\"handleCheckChange\"\n      ref=\"tree\"\n    >\n    </el-tree>\n  </div>\n</template>\n\n<script>\nimport menuList from \"@/config/menuConfig.js\";\nexport default {\n  data() {\n    return {\n      rules: {\n        name: [\n          {\n            required: true,\n            message: \"请输入角色名称\",\n            trigger: [\"blur\", \"change\"],\n          },\n        ],\n      },\n      updateRole: {}, //要修改后的角色对象\n      authList: [], //权限列表\n      checkedKeys: [], //树形空件选中项数组\n    };\n  },\n  props: [\"role\"],\n  mounted() {\n    this.updateRole = { ...this.role };\n    this.authList = this.getAuthNodes(menuList);\n    this.checkedKeys = this.role.menus;\n  },\n  watch: {\n    role(val) {\n      if (val) {\n        this.$nextTick(() => {\n          this.updateRole = { ...val };\n          this.checkedKeys = val.menus;\n          this.$refs[\"tree\"].setCheckedKeys(this.checkedKeys);\n        });\n      }\n    },\n  },\n  components: {},\n\n  methods: {\n    getAuthNodes(menuList) {\n      return menuList.map((item) => {\n        if (!item.children) {\n          return {\n            index: item.index,\n            label: item.title,\n          };\n        } else {\n          return {\n            index: item.index,\n            label: item.title,\n            children: this.getAuthNodes(item.children),\n          };\n        }\n      });\n    },\n    //树形空间节点 点击回调\n    // data 当前点击节点数据  checked  节点是否被选中  indetermainate 当前节点的子节点是否有选中状态\n    handleCheckChange(data, checked, indeterminate) {\n      if (checked) {\n        this.checkedKeys.push(data.index);\n        let set = new Set(this.checkedKeys);\n        this.checkedKeys = Array.from(set);\n      } else {\n        if (this.checkedKeys.indexOf(data.index) != -1) {\n          this.checkedKeys.splice(this.checkedKeys.indexOf(data.index), 1);\n        }\n      }\n    },\n    getMenus() {\n      this.updateRole.menus = this.checkedKeys;\n      return this.updateRole;\n    },\n  },\n};\n</script>\n\n<style scoped>\n</style>"]}]}